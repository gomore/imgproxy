name: Build

on:
  workflow_call:

env:
  DOCKER_META_IMAGES: |
    ghcr.io/gomore/imgproxy
  DOCKER_META_TAGS: |
    type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}
    type=ref,event=branch,enable=${{ startsWith(github.ref, 'refs/heads/test/') }}
    type=ref,event=tag
    type=semver,pattern=v{{major}}.{{minor}}
    type=semver,pattern=v{{major}}

jobs:
  build:
    if: github.repository_owner == 'gomore'
    strategy:
      matrix:
        build:
          - arch: amd64
            dockerPlatform: linux/amd64
            image: macOS-arm64
          - arch: arm64
            dockerPlatform: linux/arm64/v8
            image: macOS-arm64
    runs-on:
      group: ${{ matrix.build.image }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_META_IMAGES }}
          tags: ${{ env.DOCKER_META_TAGS }}
          flavor: |
            latest=false
            suffix=-${{ matrix.build.arch }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.build.dockerPlatform }}
          provenance: false
          push: true

  push_manifests:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_META_IMAGES }}
          tags: ${{ env.DOCKER_META_TAGS }}
          flavor: |
            latest=false
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push manifests
        run: |
          ANNOTATIONS=""
          for annotation in "${{ join(fromJSON(steps.meta.outputs.json).annotations, '" "') }}"
          do
            ANNOTATIONS="$ANNOTATIONS --annotation '$annotation'";
          done

          for tag in ${{ join(fromJSON(steps.meta.outputs.json).tags, ' ') }}
          do
            sh -c "docker buildx imagetools create ${ANNOTATIONS} -t $tag ${tag}-amd64 ${tag}-arm64"
          done
